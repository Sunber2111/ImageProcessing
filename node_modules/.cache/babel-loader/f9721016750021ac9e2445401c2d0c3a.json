{"ast":null,"code":"import { CREATE_PICTURE } from '../constants/types';\nimport jimp from 'jimp';\nimport { onRuntimeInitialized } from 'myOpencv';\ncv = require('./opencv');\n\nconst {\n  createCanvas,\n  createImageData\n} = require('canvas');\n\nexport const createPicture = url => async dispatch => {\n  try {\n    //onRuntimeInitialized(url)\n    let dst = new cv.Mat();\n    console.log(dst);\n    let data = (await jimp.read(url)).bitmap;\n    const canvas = createImageData(data.data, data.width, data.height);\n    console.log(canvas.data);\n    dispatch({\n      type: CREATE_PICTURE,\n      payload: url\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/XLA/project/src/redux/actions/picture.js"],"names":["CREATE_PICTURE","jimp","onRuntimeInitialized","cv","require","createCanvas","createImageData","createPicture","url","dispatch","dst","Mat","console","log","data","read","bitmap","canvas","width","height","type","payload","error"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,oBAAR,QAAmC,UAAnC;AACCC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAZ;;AACD,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAoCF,OAAO,CAAC,QAAD,CAAjD;;AAIA,OAAO,MAAMG,aAAa,GAAGC,GAAG,IAAI,MAAMC,QAAN,IAAkB;AAClD,MAAI;AAEA;AACA,QAAIC,GAAG,GAAG,IAAIP,EAAE,CAACQ,GAAP,EAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEA,QAAII,IAAI,GAAG,CAAC,MAAMb,IAAI,CAACc,IAAL,CAAUP,GAAV,CAAP,EAAuBQ,MAAlC;AAEA,UAAMC,MAAM,GAAGX,eAAe,CAACQ,IAAI,CAACA,IAAN,EAAWA,IAAI,CAACI,KAAhB,EAAuBJ,IAAI,CAACK,MAA5B,CAA9B;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACH,IAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEpB,cADD;AAELqB,MAAAA,OAAO,EAAEb;AAFJ,KAAD,CAAR;AAKH,GAjBD,CAiBE,OAAOc,KAAP,EAAc,CAEf;AACJ,CArBM","sourcesContent":["import { CREATE_PICTURE } from '../constants/types'\r\nimport jimp from 'jimp'\r\nimport {onRuntimeInitialized} from 'myOpencv'\r\n cv = require('./opencv')\r\nconst { createCanvas, createImageData } = require('canvas')\r\n\r\n\r\n\r\nexport const createPicture = url => async dispatch => {\r\n    try {\r\n\r\n        //onRuntimeInitialized(url)\r\n        let dst = new cv.Mat();\r\n        console.log(dst);\r\n        \r\n        let data = (await jimp.read(url)).bitmap\r\n\r\n        const canvas = createImageData(data.data,data.width, data.height)\r\n\r\n        console.log(canvas.data)\r\n        \r\n        dispatch({\r\n            type: CREATE_PICTURE,\r\n            payload: url\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}