{"ast":null,"code":"const cv = require('./opencv');\n\nconst {\n  createCanvas,\n  Image,\n  loadImage,\n  createImageData\n} = require('canvas');\n\nlet canvas = {};\nlet image = {};\n\nconst common = async (url, next) => {\n  image = await loadImage(url);\n  const src = cv.imread(image);\n  let dst = new cv.Mat(src.size(), 0);\n  next(src, dst);\n  canvas = createCanvas(image.width, image.height);\n  cv.imshow(canvas, dst);\n  src.delete();\n  dst.delete();\n  canvas = {};\n  image = {};\n  return canvas.toDataURL();\n};\n\nconst color2Gray = async url => {\n  const func = (src, dst) => {\n    for (let row = 0; row < src.rows; row++) {\n      for (let col = 0; col < src.cols; col++) {\n        dst.ucharPtr(row, col)[0] = Math.round((src.ucharPtr(row, col)[0] + src.ucharPtr(row, col)[1] + src.ucharPtr(row, col)[2]) / 3);\n      }\n    }\n  };\n\n  return await common(url, func);\n};\n\nmodule.exports = {\n  color2Gray\n};","map":{"version":3,"sources":["D:/XLA/project/node_modules/opencv/index.js"],"names":["cv","require","createCanvas","Image","loadImage","createImageData","canvas","image","common","url","next","src","imread","dst","Mat","size","width","height","imshow","delete","toDataURL","color2Gray","func","row","rows","col","cols","ucharPtr","Math","round","module","exports"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA;AAAnC,IAAuDJ,OAAO,CAAC,QAAD,CAApE;;AAEA,IAAIK,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAMC,MAAM,GAAG,OAAOC,GAAP,EAAWC,IAAX,KAAoB;AAE/BH,EAAAA,KAAK,GAAG,MAAMH,SAAS,CAACK,GAAD,CAAvB;AACA,QAAME,GAAG,GAAGX,EAAE,CAACY,MAAH,CAAUL,KAAV,CAAZ;AACA,MAAIM,GAAG,GAAG,IAAIb,EAAE,CAACc,GAAP,CAAWH,GAAG,CAACI,IAAJ,EAAX,EAAuB,CAAvB,CAAV;AAEAL,EAAAA,IAAI,CAACC,GAAD,EAAKE,GAAL,CAAJ;AAEAP,EAAAA,MAAM,GAAGJ,YAAY,CAACK,KAAK,CAACS,KAAP,EAAcT,KAAK,CAACU,MAApB,CAArB;AACAjB,EAAAA,EAAE,CAACkB,MAAH,CAAUZ,MAAV,EAAkBO,GAAlB;AAEAF,EAAAA,GAAG,CAACQ,MAAJ;AACAN,EAAAA,GAAG,CAACM,MAAJ;AACAb,EAAAA,MAAM,GAAG,EAAT;AACAC,EAAAA,KAAK,GAAG,EAAR;AAEA,SAAOD,MAAM,CAACc,SAAP,EAAP;AAEH,CAlBD;;AAoBA,MAAMC,UAAU,GAAG,MAAMZ,GAAN,IAAa;AAE5B,QAAMa,IAAI,GAAG,CAACX,GAAD,EAAKE,GAAL,KAAW;AACpB,SAAK,IAAIU,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGZ,GAAG,CAACa,IAA5B,EAAkCD,GAAG,EAArC,EAAyC;AACrC,WAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGd,GAAG,CAACe,IAA5B,EAAkCD,GAAG,EAArC,EAAyC;AAErCZ,QAAAA,GAAG,CAACc,QAAJ,CAAaJ,GAAb,EAAkBE,GAAlB,EAAuB,CAAvB,IACIG,IAAI,CAACC,KAAL,CAAW,CAAClB,GAAG,CAACgB,QAAJ,CAAaJ,GAAb,EAAkBE,GAAlB,EAAuB,CAAvB,IAA4Bd,GAAG,CAACgB,QAAJ,CAAaJ,GAAb,EAAkBE,GAAlB,EAAuB,CAAvB,CAA5B,GAAwDd,GAAG,CAACgB,QAAJ,CAAaJ,GAAb,EAAkBE,GAAlB,EAAuB,CAAvB,CAAzD,IAAsF,CAAjG,CADJ;AAGH;AACJ;AACJ,GATD;;AAWA,SAAO,MAAMjB,MAAM,CAACC,GAAD,EAAKa,IAAL,CAAnB;AACH,CAdD;;AAgBAQ,MAAM,CAACC,OAAP,GAAiB;AACbV,EAAAA;AADa,CAAjB","sourcesContent":["const cv = require('./opencv')\r\nconst { createCanvas, Image , loadImage, createImageData } = require('canvas')\r\n\r\nlet canvas = {}\r\nlet image = {}\r\n\r\nconst common = async (url,next) => {\r\n\r\n    image = await loadImage(url)\r\n    const src = cv.imread(image)\r\n    let dst = new cv.Mat(src.size(), 0)\r\n\r\n    next(src,dst)\r\n\r\n    canvas = createCanvas(image.width, image.height)\r\n    cv.imshow(canvas, dst)\r\n\r\n    src.delete()\r\n    dst.delete()\r\n    canvas = {}\r\n    image = {}\r\n\r\n    return canvas.toDataURL()\r\n    \r\n}\r\n\r\nconst color2Gray = async url => {\r\n    \r\n    const func = (src,dst)=>{\r\n        for (let row = 0; row < src.rows; row++) {\r\n            for (let col = 0; col < src.cols; col++) {\r\n    \r\n                dst.ucharPtr(row, col)[0] = \r\n                    Math.round((src.ucharPtr(row, col)[0] + src.ucharPtr(row, col)[1] + src.ucharPtr(row, col)[2]) / 3)\r\n    \r\n            }\r\n        }   \r\n    } \r\n\r\n    return await common(url,func)\r\n}\r\n\r\nmodule.exports = {\r\n    color2Gray\r\n}"]},"metadata":{},"sourceType":"script"}