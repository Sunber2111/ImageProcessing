{"ast":null,"code":"import { CREATE_PICTURE } from '../constants/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jimp from 'jimp';\nexport const createPicture = picture => {\n  try {\n    jimp.read(picture).then(image => {\n      image.scan(0, 0, image.bitmap.width, image.bitmap.height, function (x, y, idx) {\n        // x, y is the position of this pixel on the image\n        // idx is the position start position of this rgba tuple in the bitmap Buffer\n        // this is the image\n        //var red = this.bitmap.data[idx + 0];\n        //var green = this.bitmap.data[idx + 1];\n        //var blue = this.bitmap.data[idx + 2];\n        //var alpha = this.bitmap.data[idx + 3];\n        // rgba values run from 0 - 255\n        // e.g. this.bitmap.data[idx] = 0; // removes red from this pixel\n        // console.log(`red: ${red} green: ${green} blue: ${blue}`);\n        console.log(this.bitmap.data[idx]);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n    return {\n      type: CREATE_PICTURE,\n      payload: picture\n    };\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/XLA/project/src/redux/actions/picture.js"],"names":["CREATE_PICTURE","useDispatch","useSelector","jimp","createPicture","picture","read","then","image","scan","bitmap","width","height","x","y","idx","console","log","data","catch","err","error","type","payload"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAG;AACnC,MAAI;AAEAF,IAAAA,IAAI,CAACG,IAAL,CAAUD,OAAV,EACKE,IADL,CACUC,KAAK,IAAI;AACXA,MAAAA,KAAK,CAACC,IAAN,CAAW,CAAX,EAAc,CAAd,EAAiBD,KAAK,CAACE,MAAN,CAAaC,KAA9B,EAAqCH,KAAK,CAACE,MAAN,CAAaE,MAAlD,EAA0D,UAASC,CAAT,EAAYC,CAAZ,EAAeC,GAAf,EAAoB;AAC1E;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,MAAL,CAAYQ,IAAZ,CAAiBH,GAAjB,CAAZ;AAED,OAhBH;AAiBH,KAnBL,EAoBKI,KApBL,CAoBWC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACH,KAtBL;AAwBA,WAAQ;AACJE,MAAAA,IAAI,EAACtB,cADD;AAEJuB,MAAAA,OAAO,EAAClB;AAFJ,KAAR;AAIH,GA9BD,CA8BE,OAAOgB,KAAP,EAAc,CAEf;AACJ,CAlCM","sourcesContent":["import { CREATE_PICTURE } from '../constants/types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport jimp from 'jimp'\r\n\r\nexport const createPicture = picture =>{\r\n    try {\r\n\r\n        jimp.read(picture)\r\n            .then(image => {\r\n                image.scan(0, 0, image.bitmap.width, image.bitmap.height, function(x, y, idx) {\r\n                    // x, y is the position of this pixel on the image\r\n                    // idx is the position start position of this rgba tuple in the bitmap Buffer\r\n                    // this is the image\r\n                   \r\n                    //var red = this.bitmap.data[idx + 0];\r\n                    //var green = this.bitmap.data[idx + 1];\r\n                    //var blue = this.bitmap.data[idx + 2];\r\n                    //var alpha = this.bitmap.data[idx + 3];\r\n                   \r\n                    // rgba values run from 0 - 255\r\n                    // e.g. this.bitmap.data[idx] = 0; // removes red from this pixel\r\n        \r\n                    // console.log(`red: ${red} green: ${green} blue: ${blue}`);\r\n                    console.log(this.bitmap.data[idx]);\r\n                    \r\n                  });\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n\r\n        return ({\r\n            type:CREATE_PICTURE,\r\n            payload:picture\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}