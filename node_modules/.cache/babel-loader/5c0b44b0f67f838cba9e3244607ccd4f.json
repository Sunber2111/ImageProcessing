{"ast":null,"code":"var _jsxFileName = \"D:\\\\XLA\\\\project\\\\src\\\\container\\\\Tool\\\\index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { colorToGray } from '../../redux/actions/picture';\nconst useStyles = makeStyles({\n  root: {\n    width: '18%',\n    background: 'white',\n    boxShadow: '2px 0 rgba(0,0,0,0.2)',\n    marginLeft: '1.5px',\n    height: '100vh'\n  },\n  tille: {\n    textAlign: 'center',\n    fontSize: '16px',\n    marginTop: '20px',\n    fontWeight: 'bold',\n    color: '#BDBDBD'\n  },\n  br: {\n    width: '80%',\n    height: '1px',\n    background: '#BDBDBD',\n    marginTop: '20px'\n  },\n  btn: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 38,\n    padding: '0 20px',\n    marginTop: '20px',\n    minWidth: '130px'\n  }\n});\nconst useStylesBtn = makeStyles({\n  root: {\n    background: props => props.color === 'red' ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)' : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: props => props.color === 'red' ? '0 3px 5px 2px rgba(255, 105, 135, .3)' : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 38,\n    padding: '0 20px',\n    marginTop: '20px',\n    minWidth: '130px'\n  }\n});\n\nconst MyButton = props => {\n  const {\n    color,\n    ...other\n  } = props;\n  const classes = useStylesBtn(props);\n  return React.createElement(Button, Object.assign({\n    className: classes.root\n  }, other, {\n    onClick: () => onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport const Tool = () => {\n  const classes = useStyles();\n  const {\n    url\n  } = useSelector(state => state.picture.imageEdit);\n  const dispatch = useDispatch();\n\n  const onclick = action => {\n    dispatch(action(url));\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.tille,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Filter Edit\"), React.createElement(Grid, {\n    className: classes.br,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: [classes.btn, classes.br],\n    onClick: () => onclick(colorToGray),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Color To Gray\"), React.createElement(Button, {\n    className: classes.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Color To Gray\"), React.createElement(Button, {\n    className: classes.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Color To Gray\"), React.createElement(Button, {\n    className: classes.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Color To Gray\"), React.createElement(MyButton, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Color To Gray\"), React.createElement(MyButton, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Color To Gray\"));\n};","map":{"version":3,"sources":["D:/XLA/project/src/container/Tool/index.js"],"names":["React","Grid","makeStyles","Button","useDispatch","useSelector","colorToGray","useStyles","root","width","background","boxShadow","marginLeft","height","tille","textAlign","fontSize","marginTop","fontWeight","color","br","btn","border","borderRadius","padding","minWidth","useStylesBtn","props","MyButton","other","classes","onClick","Tool","url","state","picture","imageEdit","dispatch","onclick","action"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,UAAU,EAAE,OAFV;AAGFC,IAAAA,SAAS,EAAE,uBAHT;AAIFC,IAAAA,UAAU,EAAE,OAJV;AAKFC,IAAAA,MAAM,EAAE;AALN,GADmB;AAQzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHC,IAAAA,SAAS,EAAE,MAHR;AAIHC,IAAAA,UAAU,EAAE,MAJT;AAKHC,IAAAA,KAAK,EAAE;AALJ,GARkB;AAezBC,EAAAA,EAAE,EAAE;AACAX,IAAAA,KAAK,EAAE,KADP;AAEAI,IAAAA,MAAM,EAAE,KAFR;AAGAH,IAAAA,UAAU,EAAE,SAHZ;AAIAO,IAAAA,SAAS,EAAE;AAJX,GAfqB;AAqBzBI,EAAAA,GAAG,EAAE;AACDX,IAAAA,UAAU,EAAE,kDADX;AAEDY,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,YAAY,EAAE,CAHb;AAIDZ,IAAAA,SAAS,EAAE,uCAJV;AAKDQ,IAAAA,KAAK,EAAE,OALN;AAMDN,IAAAA,MAAM,EAAE,EANP;AAODW,IAAAA,OAAO,EAAE,QAPR;AAQDP,IAAAA,SAAS,EAAE,MARV;AASDQ,IAAAA,QAAQ,EAAC;AATR;AArBoB,CAAD,CAA5B;AAkCA,MAAMC,YAAY,GAAGxB,UAAU,CAAC;AAC5BM,EAAAA,IAAI,EAAE;AACFE,IAAAA,UAAU,EAAEiB,KAAK,IACbA,KAAK,CAACR,KAAN,KAAgB,KAAhB,GACM,kDADN,GAEM,kDAJR;AAKFG,IAAAA,MAAM,EAAE,CALN;AAMFC,IAAAA,YAAY,EAAE,CANZ;AAOFZ,IAAAA,SAAS,EAAEgB,KAAK,IACZA,KAAK,CAACR,KAAN,KAAgB,KAAhB,GACM,uCADN,GAEM,sCAVR;AAWFA,IAAAA,KAAK,EAAE,OAXL;AAYFN,IAAAA,MAAM,EAAE,EAZN;AAaFW,IAAAA,OAAO,EAAE,QAbP;AAcFP,IAAAA,SAAS,EAAE,MAdT;AAeFQ,IAAAA,QAAQ,EAAC;AAfP;AADsB,CAAD,CAA/B;;AAoBA,MAAMG,QAAQ,GAAID,KAAD,IAAW;AACxB,QAAM;AAAER,IAAAA,KAAF;AAAS,OAAGU;AAAZ,MAAsBF,KAA5B;AACA,QAAMG,OAAO,GAAGJ,YAAY,CAACC,KAAD,CAA5B;AAEA,SAAO,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,OAAO,CAACtB;AAA3B,KAAqCqB,KAArC;AAA4C,IAAA,OAAO,EAAE,MAAIE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CALD;;AAOA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAEtB,QAAMF,OAAO,GAAGvB,SAAS,EAAzB;AAEA,QAAM;AAAE0B,IAAAA;AAAF,MAAU5B,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,SAAxB,CAA3B;AAEA,QAAMC,QAAQ,GAAGjC,WAAW,EAA5B;;AAEA,QAAMkC,OAAO,GAAGC,MAAM,IAAG;AAErBF,IAAAA,QAAQ,CAACE,MAAM,CAACN,GAAD,CAAP,CAAR;AAEH,GAJD;;AAMA,SACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,OAAO,EAAC,YAHZ;AAII,IAAA,UAAU,EAAC,QAJf;AAKI,IAAA,SAAS,EAAEH,OAAO,CAACtB,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEsB,OAAO,CAAChB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,EAQI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEgB,OAAO,CAACV,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,CAACU,OAAO,CAACT,GAAT,EAAcS,OAAO,CAACV,EAAtB,CAAnB;AAA8C,IAAA,OAAO,EAAE,MAAIkB,OAAO,CAAChC,WAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEwB,OAAO,CAACT,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,EAWI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAES,OAAO,CAACT,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,EAYI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAES,OAAO,CAACT,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,EAaI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,EAcI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdJ,CADJ;AAkBH,CAhCM","sourcesContent":["import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { colorToGray } from '../../redux/actions/picture'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '18%',\r\n        background: 'white',\r\n        boxShadow: '2px 0 rgba(0,0,0,0.2)',\r\n        marginLeft: '1.5px',\r\n        height: '100vh'\r\n    },\r\n    tille: {\r\n        textAlign: 'center',\r\n        fontSize: '16px',\r\n        marginTop: '20px',\r\n        fontWeight: 'bold',\r\n        color: '#BDBDBD'\r\n    },\r\n    br: {\r\n        width: '80%',\r\n        height: '1px',\r\n        background: '#BDBDBD',\r\n        marginTop: '20px'\r\n    },\r\n    btn: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 38,\r\n        padding: '0 20px',\r\n        marginTop: '20px',\r\n        minWidth:'130px'\r\n    }\r\n})\r\n\r\nconst useStylesBtn = makeStyles({\r\n    root: {\r\n        background: props =>\r\n            props.color === 'red'\r\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: props =>\r\n            props.color === 'red'\r\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        color: 'white',\r\n        height: 38,\r\n        padding: '0 20px',\r\n        marginTop: '20px',\r\n        minWidth:'130px'\r\n    },\r\n})\r\n\r\nconst MyButton = (props) => {\r\n    const { color, ...other } = props;\r\n    const classes = useStylesBtn(props);\r\n\r\n    return <Button className={classes.root} {...other} onClick={()=>onClick} />;\r\n}\r\n\r\nexport const Tool = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const { url } = useSelector(state => state.picture.imageEdit)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onclick = action =>{\r\n\r\n        dispatch(action(url))\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            className={classes.root}\r\n        >\r\n            <Grid className={classes.tille}>Filter Edit</Grid>\r\n            <Grid className={classes.br}></Grid>\r\n            <Button className={[classes.btn, classes.br]} onClick={()=>onclick(colorToGray)} >Color To Gray</Button>\r\n            <Button className={classes.btn}>Color To Gray</Button>\r\n            <Button className={classes.btn}>Color To Gray</Button>\r\n            <Button className={classes.btn}>Color To Gray</Button>\r\n            <MyButton color=\"red\">Color To Gray</MyButton>\r\n            <MyButton color=\"blue\" >Color To Gray</MyButton>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}