{"ast":null,"code":"const Jimp = require('opencv/node_modules/jimp');\n\nconst cv = require('opencv/opencv.js');\n\nasync function onRuntimeInitialized(url) {\n  var jimpSrc = await Jimp.read(url);\n  var src = cv.matFromImageData(jimpSrc.bitmap);\n  let dst = new cv.Mat();\n  let M = cv.Mat.ones(5, 5, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(src, dst, M, anchor, 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue());\n  console.log(dst);\n  src.delete();\n  dst.delete();\n}\n\nmodule.exports = {\n  onRuntimeInitialized,\n  cv\n};","map":{"version":3,"sources":["D:/XLA/project/node_modules/opencv/index.js"],"names":["Jimp","require","cv","onRuntimeInitialized","url","jimpSrc","read","src","matFromImageData","bitmap","dst","Mat","M","ones","CV_8U","anchor","Point","dilate","BORDER_CONSTANT","morphologyDefaultBorderValue","console","log","delete","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,0BAAD,CAApB;;AAEA,MAAMC,EAAE,GAAGD,OAAO,CAAC,kBAAD,CAAlB;;AAEA,eAAeE,oBAAf,CAAoCC,GAApC,EAAwC;AAEtC,MAAIC,OAAO,GAAG,MAAML,IAAI,CAACM,IAAL,CAAUF,GAAV,CAApB;AAEA,MAAIG,GAAG,GAAGL,EAAE,CAACM,gBAAH,CAAoBH,OAAO,CAACI,MAA5B,CAAV;AAEA,MAAIC,GAAG,GAAG,IAAIR,EAAE,CAACS,GAAP,EAAV;AACA,MAAIC,CAAC,GAAGV,EAAE,CAACS,GAAH,CAAOE,IAAP,CAAY,CAAZ,EAAe,CAAf,EAAkBX,EAAE,CAACY,KAArB,CAAR;AACA,MAAIC,MAAM,GAAG,IAAIb,EAAE,CAACc,KAAP,CAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,CAAb;AACAd,EAAAA,EAAE,CAACe,MAAH,CAAUV,GAAV,EAAeG,GAAf,EAAoBE,CAApB,EAAuBG,MAAvB,EAA+B,CAA/B,EAAkCb,EAAE,CAACgB,eAArC,EAAsDhB,EAAE,CAACiB,4BAAH,EAAtD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AAEAH,EAAAA,GAAG,CAACe,MAAJ;AACAZ,EAAAA,GAAG,CAACY,MAAJ;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAACrB,EAAAA,oBAAD;AAAuBD,EAAAA;AAAvB,CAAjB","sourcesContent":["const Jimp = require('opencv/node_modules/jimp');\r\n\r\nconst cv = require('opencv/opencv.js')\r\n\r\nasync function onRuntimeInitialized(url){\r\n\r\n  var jimpSrc = await Jimp.read(url);\r\n\r\n  var src = cv.matFromImageData(jimpSrc.bitmap);\r\n\r\n  let dst = new cv.Mat();\r\n  let M = cv.Mat.ones(5, 5, cv.CV_8U);\r\n  let anchor = new cv.Point(-1, -1);\r\n  cv.dilate(src, dst, M, anchor, 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue());\r\n\r\n  console.log(dst);\r\n  \r\n  src.delete();\r\n  dst.delete();\r\n}\r\n\r\nmodule.exports = {onRuntimeInitialized, cv}\r\n"]},"metadata":{},"sourceType":"script"}