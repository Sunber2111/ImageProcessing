{"ast":null,"code":"var _jsxFileName = \"D:\\\\XLA\\\\project\\\\src\\\\components\\\\Edit\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { Tool } from '../../container/Tool';\nimport { Picture } from '../../container/Picture';\nimport { Sidebar } from '../../container/Sidebar';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getImageEdit } from '../../redux/actions/picture';\nimport isEmpty from '../../validation';\nexport const Edit = props => {\n  console.log('zo edit');\n  const id = props.match.params.id;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getImageEdit(id));\n  }, id);\n  const {\n    imageEdit\n  } = useSelector(state => state.picture);\n  useEffect(() => {}, imageEdit);\n  console.log(imageEdit);\n\n  if (isEmpty(imageEdit)) {\n    console.log('zo');\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Tool, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Picture, {\n    src: imageEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["D:/XLA/project/src/components/Edit/index.js"],"names":["React","useEffect","Tool","Picture","Sidebar","Grid","Redirect","useDispatch","useSelector","getImageEdit","isEmpty","Edit","props","console","log","id","match","params","dispatch","imageEdit","state","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,QAAMC,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACViB,IAAAA,QAAQ,CAACT,YAAY,CAACM,EAAD,CAAb,CAAR;AACH,GAFQ,EAEPA,EAFO,CAAT;AAKA,QAAM;AAACI,IAAAA;AAAD,MAAcX,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,OAAd,CAA/B;AAEApB,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEPkB,SAFO,CAAT;AAIAN,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;;AAEA,MAAGT,OAAO,CAACS,SAAD,CAAV,EACA;AACIN,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SAEI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,OAAO,EAAC,YAHZ;AAII,IAAA,UAAU,EAAC,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEK,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ;AAaH,CAzCM","sourcesContent":["import React,{useEffect} from 'react'\r\nimport { Tool } from '../../container/Tool'\r\nimport { Picture } from '../../container/Picture'\r\nimport { Sidebar } from '../../container/Sidebar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getImageEdit } from '../../redux/actions/picture'\r\nimport isEmpty from '../../validation'\r\n\r\nexport const Edit = (props) => {\r\n    \r\n    console.log('zo edit');\r\n    \r\n    const id = props.match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getImageEdit(id))\r\n    },id)\r\n\r\n    \r\n    const {imageEdit} = useSelector(state=>state.picture)\r\n\r\n    useEffect(()=>{\r\n        \r\n    },imageEdit)\r\n\r\n    console.log(imageEdit)\r\n    \r\n    if(isEmpty(imageEdit))\r\n    {    \r\n        console.log('zo');\r\n        \r\n        return <Redirect to='/' />;\r\n    }\r\n    \r\n    return (\r\n\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n        >\r\n            <Sidebar />\r\n            <Tool />\r\n            <Picture src={imageEdit} />\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}